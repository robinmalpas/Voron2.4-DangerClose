#[mcu eddy]
# FOR USB: replace this with your serial port ID
# FOR CANBUS: replace this with your canbus UUID
#serial: /dev/serial/by-id/usb-Klipper_rp2040_5044340310A9D51C-if00
#restart_method: command

[mcu eddy]
canbus_uuid: bf74cdf06076

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10
max_temp: 100

[temperature_sensor btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26

# For all Eddy (USB/Duo/Coil)
[probe_eddy_ng btt_eddy]
sensor_type: ldc1612
# Eddy USB/Duo values below. For Eddy Coil, replace these two with mcu/bus for your setup.
i2c_mcu: eddy
i2c_bus: i2c0f
samples_per_second: 500 # 250 by default
x_offset: -10
y_offset: 50
tap_target_z: -1.5
tap_adjust_z: -0.05
#reg_drive_current:15

[bed_mesh]

horizontal_move_z: 2 # set this to the same value as home_trigger_height (i.e. 2)
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
speed: 300
#mesh min x,y = bed_min_x + max(15, min(x_offs, 0)) , bed_min_y + max(15, min(y_offs, 0))
#mesh max x,y = bed_max_x - max(15, abs(x_offs)) , bed_max_y - max(15, abs(y_offs)) - fudge for scan overshoot
##mesh_min: 15, 15
##mesh_max: 334, 333
mesh_min: 45, 45
mesh_max: 330, 330
# extra x-axis movement to smooth out moves
#scan_overshoot: 5
probe_count: 30,30 # too dense a mesh is bad with rapid scan due to noise from the probe. # noise is fixed, I think
algorithm: bicubic
bicubic_tension: 0.5
#   When using the bicubic algorithm the tension parameter above may
#   be applied to change the amount of slope interpolated. Larger
#   numbers will increase the amount of slope, which results in more
#   curvature in the mesh. Default is .2.
split_delta_z: 0.0125
#   The amount of Z difference (in mm) along a move that will trigger
#   a split. Default is .025.
# interpolate 3 points per probed point
mesh_pps: 2,2 # 3,3
#   A comma separated pair of integers X, Y defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed point.
#   The user may enter a single value which will be applied to both
#   axes. Default is 2, 2.
adaptive_margin: 5
#   An optional margin (in mm) to be added around the bed area used by
#   the defined print objects when generating an adaptive mesh.
# layers to start fading out Z adjustment and to end it, with a target of 0
fade_start: 0.6 #0.6
fade_end: 10
fade_target: 0
