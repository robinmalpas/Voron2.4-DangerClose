[toolchanger]
#save_current_tool: false
  #  If set, saves currently selected tool and makes it available for 
  # initialize gcode.
# initialize_gcode: 
  #  Gcode to run on initialize. Typically used for homing any motors, or 
  #  reselecting saved tool.
initialize_on: home
  # When this toolchanger gets initialized.
  #  - manual: only when INITIALIZE_TOOLCHANGER is called.
  #  - home: when homing the printer.
  #  - first-use: on first toolchange command.
# verify_tool_pickup: True
  # If tool detection is available, will verify tool presence after pickp_gcode
#require_tool_present: False
  # Raise error if no tool present on init or on unmount. 
  # Use in case the tool contains crucial sensors for the printer to operate/home.  
uses_axis: xyz 
  # Axis used by the tool change process
#on_axis_not_homed: abort
  # When required axis are not homed
  # - abort: aborts the command
  # - home: attempts to home the axis
# params_*: 
  # Extra params to pass to pickup/dropoff gcode. Accessible in the gcode via
  # `toolchanger.params_name`.
  # Also will be copied to any tools for this toolchanger with local
  # values overriding. 

params_park_z: 296.8
params_fast_speed: 20000 # Go as fast as we can # Was 30000
params_path_speed: 900 # Was 1500
#initialize_on: manual
initialize_gcode:
 _INITIALIZE_FROM_DETECTED_TOOL
t_command_restore_axis: z
# before_change_gcode:
  # Common gcode to run before any tool change   
# after_change_gcode:
  # Common gcode to run after any tool change.
  # EG: To set custom input shaping, accelerations, etc.  
# error_gcode:
  # If specified, this gcode is run on failures instead of erroring out Klipper 
  # Typical use would be to pause the print and put INITIALIZE_TOOLCHANGER in the resume macro to reset toolchanger.
# recover_gcode:
  # Experimental, if specified, this gcode is run on `INITIALIZE_TOOLCHANGER RECOVER=1` to recover the position.
  # Should not generally be necessary, but adds optional extra control.
# parent_tool:
  # Name of a parent tool. Marks this toolchanger as a child, meaning the parent tool
  # will be selected in order to select any tool attached to this.
  # Can be used for chaining multiple filament/tool changing techniques,
  # like IDEX plus an MMU attached to one of the hotends.
# parent_mounting_mode: parent-first 
  # How to mount parent when the tool is selected:
  # - parent-first - mount parent and then child
  # - child-first - mount child before parent can be mounted
# parent_unmounting_mode: lazy 
  # How to unmount parent when the tool is deselected:
  # - child-first - unmount child and then parent
  # - parent-first - unmount parent and then child
  # - lazy - no dot unmount the child unless a needed to mount a sibling
# transfer_fan_speed: True
  # When tre, fan speed is transferred during toolchange. When false, fan speeds are not changed during toolchange.  

dropoff_gcode:
  {% set park_x = tool.params_park_x|float %}
  {% set detach_x = tool.params_detach_x|float %}
  {% set fast = tool.params_fast_speed|float %}
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
  {% set cur_z = printer.toolhead.position[2]|float %}
  RESPOND TYPE=echo MSG='Dropping off {tool.name}'
  # Pause the crash detection
  STOP_TOOL_PROBE_CRASH_DETECTION
  G90
  ; Move 1 mm up to avoid crashing into things
  G0 Z{ [cur_z+1.0, max_z]|min } F{fast}
  #   ##############  Move up to the dock  ##############
  G0 X{detach_x} Y{tool.params_safe_toolhead_y} Z{tool.params_park_z} F{fast}
  #G0 X{detach_x} Y{tool.params_safe_toolhead_y} F{fast}
  G0 Y{tool.params_attach_y} F{fast}
  #  ############## Run the path ##############
  G0 X{park_x} F{tool.params_path_speed}
  G0 Y{tool.params_close_y} F{tool.params_path_speed}
  G0 Y{tool.params_safe_shuttle_y} F{fast}
  G90

pickup_gcode:
  {% set park_x = tool.params_park_x|float %}
  {% set detach_x = tool.params_detach_x|float %}
  {% set fast = tool.params_fast_speed|float %}
  
  RESPOND TYPE=echo MSG='Picking up {tool.name}'
  RESPOND TYPE=echo MSG='Extruder is {tool.extruder}'
  RESPOND TYPE=echo MSG='{printer[tool.extruder]}'
  G90
  #   ##############  Fast to the last point  ##############
  #G0 Y{tool.params_safe_shuttle_y} F{fast}
  #   ##############  Move up to the dock  ##############
  G0 X{park_x} Z{tool.params_park_z} F{fast}
  G0 X{park_x} F{fast}
  G0 Y{tool.params_close_y} F{fast}
  # Wait for temp before actually picking up the tool, while the nozzle is resting on it's pad.
  {% if tool.extruder %}
    M109 T{tool.tool_number} S{printer[tool.extruder].target|int}
    #_WAIT_FOR_TEMP_WITHIN_TOLERANCE HEATER={tool.extruder} TOLERANCE=3
  {% endif %}
  #  ############## Run the path ##############
  G0 Y{tool.params_attach_y} F{tool.params_path_speed}
  G0 X{detach_x} F{tool.params_path_speed}
  G0 Y{tool.params_safe_toolhead_y} F{fast}
  # Enable tool crash detection
  START_TOOL_PROBE_CRASH_DETECTION T={tool.tool_number}
  
  {% if 'Z' in restore_position %}
    G0 Z{restore_position.Z|float + 1 } F{fast}
  {% endif %}
  {% if 'X' in restore_position %}
    G0 X{restore_position.X} F{fast}
  {% endif %}
  {% if 'Y' in restore_position %}
    G0 Y{restore_position.Y} F{fast}
  {% endif %}
  {% if 'Z' in restore_position %}
    G0 Z{restore_position.Z} F{fast}
  {% endif %}
  G90

[gcode_macro _INITIALIZE_FROM_DETECTED_TOOL]
gcode:
  {% if printer.tool_probe_endstop.active_tool_number | int == -1 %}
    RESPOND TYPE=error MSG='Failed to detect active tool'
    PAUSE
  {% else %}
    INITIALIZE_TOOLCHANGER T={printer.tool_probe_endstop.active_tool_number}
  {% endif %}